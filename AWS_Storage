# AWS Global network
AWS Regions have 3 main benefits
1- Each region has separate geographically (Isolated Fault Domain)
2- Geopolitical separation (ifferent Governance)
3- Locational Control(Perfomance)

-----------------------------------
Every region has multiple Availability Zones(AZ) it could be 2,3,4,5 and 6

## NOTES 
- Use a serverless achitecture when you are starting from a scratch
- Leverage Amazon  S3, Amazon Cloudfront, Amazon API Gateway, Step Functions, Amazon cognito, AWS AppSync for serverless environment
- Use Amazon EC&EKS when using a Docker container.
- Use AWS Fargate to manage container provisioning and scaling
- Use Amazon Elastic Beanstalk when working with monolithic applications.


## AWS Storage
Why organizations move to the cloud?
- Increased organizational agility.
- Storage agility in AWS
- Accelerate ability to innovate
- Strengthen security
- Reduce costs
- Operational expense vs capital investment

**Because you pay for only the resources that you use, you can provision storage to do the following:
- Test new applications
- Test use cases
- Try different storage services for your existing ones.

Securing your data is a top-level concern.

*** Core Storage services: Block, File, Object

*** Edge and Hybrid Cloud Storage Services (AWS Snow Family, AWS Outposts, AWS Storage Gateway)
- Edge computing and storage
- On-premises cloud storage
- gateways

*** Data Transfer and Migration Services (AWS Transfer Family, AWS DataSync, AWS SnowFamily, Application Migration Service)
- File transfer services,
- Data Synchronization and managed online transfer
- Offline transfer services
- Migration Services

*** Data Protection services (AWS Backup, Native Service Snapshots, CloudEndure Disaster Recovery)
- Backup and Archive,
- Snapshots,
- Replication
- Disaster Recovery Services

!!!AWS offers lift-and-shift migration by providing automated tools such as AWS Application Migration Service (AWS MGN) and AWS Server Migration Service (AWS SMS).


*** Hybrid Storage Solutions AWS Outposts

- AWS Outposts brings the AWS Cloud services into your data center. AWS compute, storage, database, and other services run locally on Outposts. 
You can access the full range of AWS services available in the Region to build, manage, and scale your on-premises applications using familiar AWS services and tools.
- AWS Outposts currently supports Amazon Elastic Block Store (Amazon EBS) for block storage. 
You can also include Amazon Simple Storage Service (Amazon S3) as part of your AWS Outposts implementation.

*** Hybrid Storage Solutions AWS Storage Gateway
- AWS Storage Gateway is a hybrid solution that connects an on-premises software appliance with cloud-based storage.
Storage Gateway provides seamless integration with data security features between your on-premises IT environment and the AWS storage infrastructure. 
- Storage Gateway offers file-based file gateways (Amazon S3 File and Amazon FSx File), volume-based (Cached and Stored), and tape-based storage solutions.

*** Object Storage in Amazon S3
Objects are any piece of data stored within a bucket. You also learned that you can create a pseudo folder structure using prefixes. 
In Amazon S3 object storage, you can organize objects to imitate a hierarchy by using key name prefixes and delimiters. 
Prefixes and delimiters allow you to group similar items to help visually organize and easily retrieve your data.
In the user interface, these prefixes give the appearance of a folder/ subfolder structure but in reality, the storage is still a flat structure. 
- Buckets are permanent containers that hold objects. You can create between 1 and 100 buckets in each AWS account. 
You can increase the bucket limit to a maximum of 1,000 buckets by submitting a service limit increase. 
- An Amazon S3 bucket is a versatile storage option with the ability to: 
host a static web site, retain version information on objects, and employ life-cycle management policies to balance version retention with bucket size and cost. 

- You can control access to the objects you store in Amazon S3. 
S3 supports both resource-based and user-based access controls. 
Access control lists (ACLs) and bucket policies are both examples of resource-based access control. 

********Block Storage
Block storage is raw storage in which the hardware storage device or drive is presented, as either disk or volume, to be formatted and attached to the compute system for use. 
The storage is formatted into predefined continuous segments on the storage device. These segments are called blocks, which is where this storage type gets its name. 
The blocks are the basic fixed storage units used to store data on the device.
Storage devices can be hard disk drives (HDDs), solid state drives (SSDs), or newer types of storage devices, such as Non-Volatile Memory Express (NVMe).
In addition to individual storage devices, block storage can be deployed on storage area network (SAN) systems.

*******File Storage
File storage is built on top of block storage, typically serving as a file share or file server. 
File storage is created using an operating system that formats and manages the reading and writing of data to the block storage devices.
The name file storage comes from the primary use of storing data as files typically in a directory tree hierarchy.
The two most common storage protocols for file storage are Server Message Block (SMB) and Network File System (NFS), which are network protocols that enable users to communicate with remote computers and servers. 
The protocols enable users to use the servers' resources or share, open, and edit files.

*******Object Storage
Object storage is also built on top of block storage. 
Object storage is created using an operating system that formats and manages the reading and writing of data to the block storage devices. 
The name object storage comes from the primary use of storing the data within a binary object. 
Unlike file storage, object storage does not differentiate between types of data. The type of data or the file type becomes part of the data's metadata.
An object is made up of a larger sets of blocks organized using a predetermined size. 
For example, one object storage system uses binary object sizes of 128 megabytes (MB). 
Smaller files or data are stored at a binary level within the object. Larger data files are stored by spreading the data across multiple objects.















